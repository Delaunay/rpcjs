
class Attributes:
    # Attributes of HTML elements
    accept = 'accept'  # Specifies the types of files that the server accepts (only for type="file")
    accept_charset = 'accept-charset'  # Specifies the character encodings that are to be used for the form submission
    accesskey = 'accesskey'  # Specifies a shortcut key to activate/focus an element
    action = 'action'  # Specifies where to send the form-data when a form is submitted
    align = 'align'  # Specifies the alignment according to surrounding elements. Use CSS instead
    alt = 'alt'  # Specifies an alternate text when the original element fails to display
    async_exec = 'async'  # Specifies that the script is executed asynchronously (only for external scripts)
    autocomplete = 'autocomplete'  # Specifies whether the <form> or the <input> element should have autocomplete enabled
    autofocus = 'autofocus'  # Specifies that the element should automatically get focus when the page loads
    autoplay = 'autoplay'  # Specifies that the audio/video will start playing as soon as it is ready
    bgcolor = 'bgcolor'  # Specifies the background color of an element. Use CSS instead
    border = 'border'  # Specifies the width of the border of an element. Use CSS instead
    charset = 'charset'  # Specifies the character encoding
    checked = 'checked'  # Specifies that an <input> element should be pre-selected when the page loads (for type="checkbox" or type="radio")
    cite = 'cite'  # Specifies a URL which explains the quote/deleted/inserted text
    class_name = 'class'  # Specifies one or more classnames for an element (refers to a class in a style sheet)
    color = 'color'  # Specifies the text color of an element. Use CSS instead
    cols = 'cols'  # Specifies the visible width of a text area
    colspan = 'colspan'  # Specifies the number of columns a table cell should span
    content = 'content'  # Gives the value associated with the http-equiv or name attribute
    contenteditable = 'contenteditable'  # Specifies whether the content of an element is editable or not
    controls = 'controls'  # Specifies that audio/video controls should be displayed (such as a play/pause button etc)
    coords = 'coords'  # Specifies the coordinates of the area
    data = 'data'  # Specifies the URL of the resource to be used by the object
    datetime = 'datetime'  # Specifies the date and time
    default = 'default'  # Specifies that the track is to be enabled if the user's preferences do not indicate that another track would be more appropriate
    defer = 'defer'  # Specifies that the script is executed when the page has finished parsing (only for external scripts)
    dir = 'dir'  # Specifies the text direction for the content in an element
    dirname = 'dirname'  # Specifies that the text direction will be submitted
    disabled = 'disabled'  # Specifies that the specified element/group of elements should be disabled
    download = 'download'  # Specifies that the target will be downloaded when a user clicks on the hyperlink
    draggable = 'draggable'  # Specifies whether an element is draggable or not
    dropzone = 'dropzone'  # Specifies whether the dragged data is copied, moved, or linked, when dropped
    enctype = 'enctype'  # Specifies how the form-data should be encoded when submitting it to the server (only for method="post")
    for_element = 'for'  # Specifies which form element(s) a label/calculation is bound to
    form = 'form'  # Specifies the name of the form the element belongs to
    formaction = 'formaction'  # Specifies where to send the form-data when a form is submitted. Only for type="submit"
    headers = 'headers'  # Specifies one or more headers cells a cell is related to
    height = 'height'  # Specifies the height of the element
    hidden = 'hidden'  # Specifies that an element is not yet, or is no longer, relevant
    high = 'high'  # Specifies the range that is considered to be a high value
    href = 'href'  # Specifies the URL of the page the link goes to
    hreflang = 'hreflang'  # Specifies the language of the linked document
    http_equiv = 'http-equiv'  # Provides an HTTP header for the information/value of the content attribute
    id = 'id'  # Specifies a unique id for an element
    ismap = 'ismap'  # Specifies an image as a server-side image-map
    kind = 'kind'  # Specifies the kind of text track
    label = 'label'  # Specifies the title of the text track
    lang = 'lang'  # Specifies the language of the element's content
    list = 'list'  # Refers to a <datalist> element that contains pre-defined options for an <input> element
    loop = 'loop'  # Specifies that the audio/video will start over again, every time it is finished
    low = 'low'  # Specifies the range that is considered to be a low value
    max = 'max'  # Specifies the maximum value
    maxlength = 'maxlength'  # Specifies the maximum number of characters allowed in an element
    media = 'media'  # Specifies what media/device the linked document is optimized for
    method = 'method'  # Specifies the HTTP method to use when sending form-data
    min = 'min'  # Specifies a minimum value
    multiple = 'multiple'  # Specifies that a user can enter more than one value
    muted = 'muted'  # Specifies that the audio output of the video should be muted
    name = 'name'  # Specifies the name of the element
    novalidate = 'novalidate'  # Specifies that the form should not be validated when submitted
    onabort = 'onabort'  # Script to be run on abort
    onafterprint = 'onafterprint'  # Script to be run after the document is printed
    onbeforeprint = 'onbeforeprint'  # Script to be run before the document is printed
    onbeforeunload = 'onbeforeunload'  # Script to be run when the document is about to be unloaded
    onblur = 'onblur'  # Script to be run when the element loses focus
    oncanplay = 'oncanplay'  # Script to be run when a file is ready to start playing (when it has buffered enough to begin)
    oncanplaythrough = 'oncanplaythrough'  # Script to be run when a file can be played all the way to the end without pausing for buffering
    onchange = 'onchange'  # Script to be run when the value of the element is changed
    onclick = 'onclick'  # Script to be run when the element is being clicked
    oncontextmenu = 'oncontextmenu'  # Script to be run when a context menu is triggered
    oncopy = 'oncopy'  # Script to be run when the content of the element is being copied
    oncuechange = 'oncuechange'  # Script to be run when the cue changes in a <track> element
    oncut = 'oncut'  # Script to be run when the content of the element is being cut
    ondblclick = 'ondblclick'  # Script to be run when the element is being double-clicked
    ondrag = 'ondrag'  # Script to be run when the element is being dragged
    ondragend = 'ondragend'  # Script to be run at the end of a drag operation
    ondragenter = 'ondragenter'  # Script to be run when an element has been dragged to a valid drop target
    ondragleave = 'ondragleave'  # Script to be run when an element leaves a valid drop target
    ondragover = 'ondragover'  # Script to be run when an element is being dragged over a valid drop target
    ondragstart = 'ondragstart'  # Script to be run at the start of a drag operation
    ondrop = 'ondrop'  # Script to be run when dragged element is being dropped
    ondurationchange = 'ondurationchange'  # Script to be run when the length of the media changes
    onemptied = 'onemptied'  # Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
    onended = 'onended'  # Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
    onerror = 'onerror'  # Script to be run when an error occurs
    onfocus = 'onfocus'  # Script to be run when the element gets focus
    onhashchange = 'onhashchange'  # Script to be run when there has been changes to the anchor part of the a URL
    oninput = 'oninput'  # Script to be run when the element gets user input
    oninvalid = 'oninvalid'  # Script to be run when the element is invalid
    onkeydown = 'onkeydown'  # Script to be run when a user is pressing a key
    onkeypress = 'onkeypress'  # Script to be run when a user presses a key
    onkeyup = 'onkeyup'  # Script to be run when a user releases a key
    onload = 'onload'  # Script to be run when the element is finished loading
    onloadeddata = 'onloadeddata'  # Script to be run when media data is loaded
    onloadedmetadata = 'onloadedmetadata'  # Script to be run when meta data (like dimensions and duration) are loaded
    onloadstart = 'onloadstart'  # Script to be run just as the file begins to load before anything is actually loaded
    onmousedown = 'onmousedown'  # Script to be run when a mouse button is pressed down on an element
    onmousemove = 'onmousemove'  # Script to be run as long as theÂ  mouse pointer is moving over an element
    onmouseout = 'onmouseout'  # Script to be run when a mouse pointer moves out of an element
    onmouseover = 'onmouseover'  # Script to be run when a mouse pointer moves over an element
    onmouseup = 'onmouseup'  # Script to be run when a mouse button is released over an element
    onmousewheel = 'onmousewheel'  # Script to be run when a mouse wheel is being scrolled over an element
    onoffline = 'onoffline'  # Script to be run when the browser starts to work offline
    ononline = 'ononline'  # Script to be run when the browser starts to work online
    onpagehide = 'onpagehide'  # Script to be run when a user navigates away from a page
    onpageshow = 'onpageshow'  # Script to be run when a user navigates to a page
    onpaste = 'onpaste'  # Script to be run when the user pastes some content in an element
    onpause = 'onpause'  # Script to be run when the media is paused either by the user or programmatically
    onplay = 'onplay'  # Script to be run when the media has started playing
    onplaying = 'onplaying'  # Script to be run when the media has started playing
    onpopstate = 'onpopstate'  # Script to be run when the window's history changes.
    onprogress = 'onprogress'  # Script to be run when the browser is in the process of getting the media data
    onratechange = 'onratechange'  # Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode).
    onreset = 'onreset'  # Script to be run when a reset button in a form is clicked.
    onresize = 'onresize'  # Script to be run when the browser window is being resized.
    onscroll = 'onscroll'  # Script to be run when an element's scrollbar is being scrolled
    onsearch = 'onsearch'  # Script to be run when the user writes something in a search field (for <input="search">)
    onseeked = 'onseeked'  # Script to be run when the seeking attribute is set to false indicating that seeking has ended
    onseeking = 'onseeking'  # Script to be run when the seeking attribute is set to true indicating that seeking is active
    onselect = 'onselect'  # Script to be run when the element gets selected
    onstalled = 'onstalled'  # Script to be run when the browser is unable to fetch the media data for whatever reason
    onstorage = 'onstorage'  # Script to be run when a Web Storage area is updated
    onsubmit = 'onsubmit'  # Script to be run when a form is submitted
    onsuspend = 'onsuspend'  # Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
    ontimeupdate = 'ontimeupdate'  # Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
    ontoggle = 'ontoggle'  # Script to be run when the user opens or closes the <details> element
    onunload = 'onunload'  # Script to be run when a page has unloaded (or the browser window has been closed)
    onvolumechange = 'onvolumechange'  # Script to be run each time the volume of a video/audio has been changed
    onwaiting = 'onwaiting'  # Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
    onwheel = 'onwheel'  # Script to be run when the mouse wheel rolls up or down over an element
    open = 'open'  # Specifies that the details should be visible (open) to the user
    optimum = 'optimum'  # Specifies what value is the optimal value for the gauge
    pattern = 'pattern'  # Specifies a regular expression that an <input> element's value is checked against
    placeholder = 'placeholder'  # Specifies a short hint that describes the expected value of the element
    poster = 'poster'  # Specifies an image to be shown while the video is downloading, or until the user hits the play button
    preload = 'preload'  # Specifies if and how the author thinks the audio/video should be loaded when the page loads
    readonly = 'readonly'  # Specifies that the element is read-only
    rel = 'rel'  # Specifies the relationship between the current document and the linked document
    required = 'required'  # Specifies that the element must be filled out before submitting the form
    reversed = 'reversed'  # Specifies that the list order should be descending (9,8,7...)
    rows = 'rows'  # Specifies the visible number of lines in a text area
    rowspan = 'rowspan'  # Specifies the number of rows a table cell should span
    sandbox = 'sandbox'  # Enables an extra set of restrictions for the content in an <iframe>
    scope = 'scope'  # Specifies whether a header cell is a header for a column, row, or group of columns or rows
    selected = 'selected'  # Specifies that an option should be pre-selected when the page loads
    shape = 'shape'  # Specifies the shape of the area
    size = 'size'  # Specifies the width, in characters (for <input>) or specifies the number of visible options (for <select>)
    sizes = 'sizes'  # Specifies the size of the linked resource
    span = 'span'  # Specifies the number of columns to span
    spellcheck = 'spellcheck'  # Specifies whether the element is to have its spelling and grammar checked or not
    src = 'src'  # Specifies the URL of the media file
    srcdoc = 'srcdoc'  # Specifies the HTML content of the page to show in the <iframe>
    srclang = 'srclang'  # Specifies the language of the track text data (required if kind="subtitles")
    srcset = 'srcset'  # Specifies the URL of the image to use in different situations
    start = 'start'  # Specifies the start value of an ordered list
    step = 'step'  # Specifies the legal number intervals for an input field
    style = 'style'  # Specifies an inline CSS style for an element
    tabindex = 'tabindex'  # Specifies the tabbing order of an element
    target = 'target'  # Specifies the target for where to open the linked document or where to submit the form
    title = 'title'  # Specifies extra information about an element
    translate = 'translate'  # Specifies whether the content of an element should be translated or not
    type = 'type'  # Specifies the type of element
    usemap = 'usemap'  # Specifies an image as a client-side image-map
    value = 'value'  # Specifies the value of the element
    width = 'width'  # Specifies the width of the element
    wrap = 'wrap'  # Specifies how the text in a text area is to be wrapped when submitted in a form
